class HousingLoanCalculator:
    def __init__(selfcheck):
        selfcheck.loan_history = []

    def get_user_input(selfcheck, prompt, data_type=float):
        while True:
            try:
                user_input = data_type(input(prompt))
                return user_input
            except ValueError:
                print("Invalid input. Please enter a valid value.")

    #Calculation process
    def calculate_monthly_installment(selfcheck, principal, annual_interest_rate, loan_term):
        monthly_interest_rate = annual_interest_rate / 100 / 12
        num_payments = loan_term * 12

        monthly_installment = (principal* monthly_interest_rate* ((1 + monthly_interest_rate) ** num_payments)) / (((1 + monthly_interest_rate) ** num_payments) - 1)

        return monthly_installment

    def calculate_total_payment(selfcheck, monthly_installment, loan_term):
        return monthly_installment * loan_term * 12

    def calculate_dsr(selfcheck, monthly_income, monthly_commitments):
        total_commitments = sum(monthly_commitments)
        dsr = (total_commitments / monthly_income) * 100
        return dsr
    
    #User details
    def display_housingloan_details(selfcheck, principal, monthly_installment, total_payment, dsr):
        print("\nLoan Details:")
        print(f"Principal Loan Amount: RM{principal:.2f}")
        print(f"Monthly Installment: RM{monthly_installment:.2f}")
        print(f"Total Payment over the Loan Term: RM{total_payment:.2f}")
        print(f"Debt Service Ratio (DSR): {dsr:.2f}%")

    #DSR check
    def check_housingloan_eligibility(self, dsr):
        dsr_threshold = 70.0
        return dsr <= dsr_threshold

    #User's menu
    def run_housingloan_calculator(selfcheck):
        while True:
            print("Hello! Welcome to the selfchecker housing loan application! How can we assist you?")
            print("\nLoan Calculator Menu:")
            print("Below are the choices you can choose! :)")
            print("1. Calculate New Loan")
            print("2. Display Previous Loan Calculations")
            print("3. Exit")

            choice = selfcheck.get_user_input("Enter your choice (1, 2, or 3): ", int)

            if choice == 1:
                while True:
                    principal = selfcheck.get_user_input("Enter the principal loan amount: RM")
                    annual_interest_rate = selfcheck.get_user_input("Enter the annual interest rate (%): ")
                    loan_term = selfcheck.get_user_input("Enter the loan term in years: ", int)
                    monthly_income = selfcheck.get_user_input("Enter the applicant's monthly income: RM")

                    # Get other monthly financial commitments
                    num_commitments = selfcheck.get_user_input("Enter the number of other monthly commitments: ", int)
                    monthly_commitments = []
                    for i in range(num_commitments):
                        commitment = selfcheck.get_user_input(f"Enter commitment {i + 1}: RM")
                        monthly_commitments.append(commitment)


                    # Option to edit details
                    edit_option = selfcheck.get_user_input("Enter 1 to edit details, 0 to proceed with the calculation: ", int)
                    if edit_option == 1:
                        continue  # Go back to the beginning of the loop to re-enter details
                    elif edit_option == 0:
                        break

                # Calculate monthly installment, total payment, and DSR
                monthly_installment = selfcheck.calculate_monthly_installment(
                    principal, annual_interest_rate, loan_term
                )
                total_payment = selfcheck.calculate_total_payment(
                    monthly_installment, loan_term
                )
                dsr = selfcheck.calculate_dsr(monthly_income, monthly_commitments)

                # Display final loan details
                selfcheck.display_housingloan_details(
                    principal, monthly_installment, total_payment, dsr
                )

                # Check loan eligibility
                eligible = selfcheck.check_housingloan_eligibility(dsr)

                if eligible:
                    print("Congratulations! You are eligible for the loan. :) ")
                else:
                    print("Sorry, based on the DSR percentage, you are not eligible for the loan :( ).")

                # Store loan details in the list
                selfcheck.loan_history.append(
                    {
                        "Principal loan amount": principal,
                        "Monthly Installment": monthly_installment,
                        "Total Payment over the loan term": total_payment,
                        "Debt Service Ratio (DSR)": dsr,
                        "Eligible": eligible,
                    }
                )

            elif choice == 2:
                if not selfcheck.loan_history:
                    print("No previous loan calculations.")
                else:
                    print("\nPrevious Loan Calculations:")
                    for idx, loan in enumerate(selfcheck.loan_history, start=1):
                        print(f"\nCalculation {idx}:")
                        for key, value in loan.items():
                            print(f"{key}: {value}")

                    # Option to delete an history calculation
                    while True:
                        delete_option = selfcheck.get_user_input(
                            "\nEnter the number of the calculation to delete (0 to go back to the menu): ", int
                        )

                        if delete_option == 0:
                            break
                        elif 1 <= delete_option <= len(selfcheck.loan_history):
                            del selfcheck.loan_history[delete_option - 1]
                            print("Calculation deleted.")
                            break
                        else:
                            print("Invalid selection. Please enter a valid number.")

            elif choice == 3:
                print("Exiting the program. Goodbye!")
                break
            else:
                print("Invalid choice. Please enter 1, 2, or 3.")


# Create an instance of the HousingLoanCalculator class and run the program
calculator = HousingLoanCalculator()
calculator.run_housingloan_calculator()
